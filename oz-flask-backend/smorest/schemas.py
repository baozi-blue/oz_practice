# 데이터 검증과 직렬화에 사용되는 Marshmallow 스키마를 정의 (데이터 스키마 검증)
from marshmallow import Schema, fields

class ItemSchema(Schema):
		# id 필드가 직렬화(즉, Python 객체에서 JSON으로 변환) 과정에서만 사용되고, (서버->클라)
		# 역직렬화(즉, JSON에서 Python 객체로 변환) 과정에서는 무시된다 (클라->서버)
		# 즉, id 값은 서버에서 관리하겠다는 뜻
    id = fields.Int(dump_only=True)
    name = fields.Str(required=True)
    description = fields.Str()



# Python 객체를 JSON으로 변환하는 작업은 주로 다음과 같은 상황에서 수행됩니다:

# 1. 데이터 저장: 애플리케이션의 상태나 데이터를 파일 시스템에 저장할 때. JSON은 사람에게 읽기 쉬운 형식이어서 로그 파일이나 설정 파일 등으로 유용합니다.
# 2. 네트워크 통신: 클라이언트와 서버 간에 데이터를 전송할 때. JSON은 REST API와 같은 웹 서비스에서 데이터 형식으로 널리 사용됩니다.
# 3. 프론트엔드와 백엔드 간의 데이터 교환: 웹 애플리케이션에서 클라이언트(프론트엔드)와 서버(백엔드) 간에 데이터를 주고 받을 때 JSON 형식이 자주 사용됩니다.
# 4. 데이터 통합: 여러 데이터 소스에서 수집된 정보를 하나의 형식으로 통합할 때. JSON은 다양한 시스템 간에 데이터를 쉽게 전달할 수 있게 해줍니다.
# 5. API 응답 생성: 웹 API가 클라이언트에 응답할 때, 데이터를 JSON 형식으로 변환하여 반환합니다.

# 이런 상황에서 Python 객체를 JSON으로 변환하면 데이터의 저장, 전송, 처리 등의 작업을 효율적으로 수행할 수 있습니다.